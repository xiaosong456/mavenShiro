<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    
    <!--ContextLoaderListener的作用就是启动Web容器时，自动装配ApplicationContext.xml的配置信息。因为它实现了ServletContextListener这个接口，
    在web.xml配置这个监听器，启动容器时，就会默认执行它实现的方法。-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--applicationContext.xml的路径信息-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    
    <!--SpringMVC 配置-->
    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc-config.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--使用UTF-8过滤编码格式-->
    <filter>
        <filter-name>Encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>Encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 配置shiro的核心过滤器
	filter-name 必须和applicationContext.xml中  <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"> id保持一致
	使用[/*]匹配所有请求，保证所有的可控请求都经过Shiro的过滤
    DelegatingFilterProxy实际上是Filter的一个代理对象。默认情况下，Spring会到IOC容器中查找和filter-name对应的filter bean。也可以通过targetBeanName的初始化参数来配置filter bean的id
	-->
 <!--   <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
        &lt;!&ndash;<init-param>&ndash;&gt;
        &lt;!&ndash;<param-name>targetBeanName</param-name>&ndash;&gt;
        &lt;!&ndash;<param-value>shiroFilter</param-value>&ndash;&gt;
        &lt;!&ndash;</init-param>&ndash;&gt;
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>-->


    <!--解决前台跨域问题-->
    <filter>
        <filter-name>cors</filter-name>
        <filter-class>com.lxsoft.filter.CorsFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>cors</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--设置Session超时时间5分钟-->
    <session-config>
        <session-timeout>10</session-timeout>
    </session-config>
    
</web-app>